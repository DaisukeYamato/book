demo()
q()
1+2
sqrt(10)
x <- sqrt(2)
x
x^2
break <- 1
x <- 1:4
x
(x <- 1:4)
c(1.0, 2.0, 3.0, 4.0, 5.0)
x <- c(1.0, 2.0, 3.0, 4.0, 5.0)
sqrt(x)
log(x)
q()
1 +
2
x <- sqrt(2)
x <- c(1,2,3,4)
z<- c(0,5,7,9)
cor(x,z,method="pearson")
cor(x,z,method="spearman")
1:5
date()
myfunc01 <- function() {}
myfunc01 <- function() {
return(1)
}
myfunc01
myfunc01()
myfunc02 <- function(x) {
return(x)
}
myfunc02(x)
myabs <- function(x){
if (x < 0) { return(-x)}
else { return(x)}
}
myabs(-2)
f <- function(x) exp(x)-2
(result <- uniroot(f, c(0,1)))
result$root
polyroot(c(2,3,1))
f <- expression(a*x^4)
D(f, "x")
polyroot(c(2,3,1))
D(f, "x")
q()
install.packages("USDR")
install.packages("DSUR")
exit
q()
install.packages("DSUR")
source("/Users/yamato/programs/R/textbooks/DiscoveringStatUsingR/chap03/3_5.R")
metallica
metallica$Name
source("/Users/yamato/programs/R/textbooks/DiscoveringStatUsingR/chap03/3_5.R")
metallica
names(metallica)
Chap 3.5#
#######################################################
# Name#
metallicaNames <- c ("Lars", "James", "Kirk", "Rob")#
# Ages#
metallicaAges <- c(47, 47, 48, 46)#
# dataframe#
metallica <- data.frame(Name = metallicaNames, Age = metallicaAges)#
#
# childAges#
metallica$childAge <- c(12, 12, 4, 6)#
#
# 3.5.3#
metallica$fatherhoodAge <- metallica$Age - metallica$childAge
metallica
name <- c("Ben", "Martin", "Andy", "Paul", "Graham", "Carina", "Karina", "Dong", "Mark", "Zoe#
")#
#
birth_date <- as.Date(c("1977-07-03", "1969-05-24", "1973-06-21", "1970-07-16", "1949-10-10", "1983-11-05","1987-10-08", "1989-09-16", "1973-05-20", "1984-11-12") )
birth_date
name
name <- c("Ben", "Martin", "Andy", "Paul", "Graham", "Carina", "Karina", "Dong", "Mark", "Zoe")#
#
birth_date <- as.Date(c("1977-07-03", "1969-05-24", "1973-06-21", "1970-07-16", "1949-10-10", "1983-11-05","1987-10-08", "1989-09-16", "1973-05-20", "1984-11-12") )
name
job <- c(rep(1,5), rep(2,5))
job
job <- c(rep(1,5), rep(2,5))#
job <- factor(job, levels=c(1:2), labels=c("Lecturer", "Student"))#
# or #
# job <- gl(2, 5, labels = c("Lecturer","Student"))
job
levels(job)
friends <- c(5, 2, 0, 4, 1, 10, 12, 15, 12, 17)#
#
alcohol <- c(10, 15, 20, 5, 30, 25, 20, 16, 17, 18)#
#
income <- c(20000, 40000, 35000, 22000, 50000, 5000, 100, 3000, 10000, 10)#
#
neurotic <- c(10, 17, 14, 13, 21, 7, 13, 9, 14, 13)#
#
lecturerData <- data.frame(name, birth_date, job, friends, alcohol, income, neurotic)
lecturerData
chap 3.6#
install.packages("Rcmdr", dependencies = TRUE)#
library(Rcmdr)
chap 3.6#
install.packages("Rcmdr", dependencies = TRUE)
install.packages("foreign")
library(foreign)
installed.packages()
Chap 3.5#
#######################################################
# Name#
metallicaNames <- c ("Lars", "James", "Kirk", "Rob")#
# Ages#
metallicaAges <- c(47, 47, 48, 46)#
# dataframe#
metallica <- data.frame(Name = metallicaNames, Age = metallicaAges)#
#
# childAges#
metallica$childAge <- c(12, 12, 4, 6)#
#
# 3.5.3#
metallica$fatherhoodAge <- metallica$Age - metallica$childAge#
#
# 3.5.4#
name <- c("Ben", "Martin", "Andy", "Paul", "Graham", "Carina", "Karina", "Dong", "Mark", "Zoe")#
#
birth_date <- as.Date(c("1977-07-03", "1969-05-24", "1973-06-21", "1970-07-16", "1949-10-10", "1983-11-05","1987-10-08", "1989-09-16", "1973-05-20", "1984-11-12") )#
#
job <- c(rep(1,5), rep(2,5))#
job <- factor(job, levels=c(1:2), labels=c("Lecturer", "Student"))#
# or #
# job <- gl(2, 5, labels = c("Lecturer","Student"))#
#
friends <- c(5, 2, 0, 4, 1, 10, 12, 15, 12, 17)#
#
alcohol <- c(10, 15, 20, 5, 30, 25, 20, 16, 17, 18)#
#
income <- c(20000, 40000, 35000, 22000, 50000, 5000, 100, 3000, 10000, 10)#
#
neurotic <- c(10, 17, 14, 13, 21, 7, 13, 9, 14, 13)#
#
lecturerData <- data.frame(name, birth_date, job, friends, alcohol, income, neurotic)
metallica
write.table(metallica, "Metallica Data.tsv",sep="\t",row.names=FALSE)
name <- c("Ben", "Martin", "Andy", "Paul", "Graham", "Carina", "Karina", "Dong", "Mark", "Zoe")#
#
birth_date <- as.Date(c("1977-07-03", "1969-05-24", "1973-06-21", "1970-07-16", "1949-10-10", "1983-11-05","1987-10-08", "1989-09-16", "1973-05-20", "1984-11-12") )#
#
job <- c(rep(1,5), rep(2,5))#
job <- factor(job, levels=c(1:2), labels=c("Lecturer", "Student"))#
# or #
# job <- gl(2, 5, labels = c("Lecturer","Student"))#
#
friends <- c(5, 2, 0, 4, 1, 10, 12, 15, 12, 17)#
#
alcohol <- c(10, 15, 20, 5, 30, 25, 20, 16, 17, 18)#
#
income <- c(20000, 40000, 35000, 22000, 50000, 5000, 100, 3000, 10000, 10)#
#
neurotic <- c(10, 17, 14, 13, 21, 7, 13, 9, 14, 13)#
#
lecturerData <- data.frame(name, birth_date, job, friends, alcohol, income, neurotic)
lecturerData
lecturerData[,1;3]
lecturerData[,1:3]
lecturerPersonality <- lecturerData[,c("friends","alcohol","neurotic")]
lecturerPersonality
lecturerOnly <- lecturerData[job=="Lecture",]
lecturerOnly
lecturerOnly <- lecturerData[job=="Lecturer",]
lecturerOnly
alcoholPersonality <- lecturerData[alcohol > 10, c("friends","alcohol","neurotic")]
alcoholPersonality
library#
install.packages("car")#
install.packages("ggplot2")#
install.packages("pastecs")#
install.packages("psych")#
#
library(car); library(ggplot2); library(pastecs); library(psych);
install.packages("logit")
chap5 Exploring assumptions#
setwd("/Users/yamato/programs/R/textbooks/DiscoveringStatUsingR/chap05")#
#
# library#
install.packages("car")#
install.packages("ggplot2")#
install.packages("pastecs")#
install.packages("psych")#
#
library(car); library(ggplot2); library(pastecs); library(psych);#
library(Rcmdr)#
#
# 5.5#
dlf <- read.delim("DownloadFestival.dat", header=T)#
dlf[dlf$day1>20, c("day1")] <- 2.02#
hist.day1 <- ggplot(dlf, aes(day1)) + theme(legend.position = "none") + geom_histogram(aes(y = ..density..), colour = "black", fill = "white") + labs(x = "Hygiene score on day 1", y = "Density")#
#
hist.day1 + stat_function(fun = dnorm, args = list(mean = mean(dlf$day1, na.rm=TRUE), sd = sd(dlf$day1, na.rm = TRUE) ), colour = "black", size = 1 )#
#
qqplot.day1 <- qplot (sample = dlf$day1, stat="qq")#
qqplot.day1
alcoholPersonality
hist.day1 <- ggplot(dlf, aes(day1)) + theme(legend.position = "none") + geom_histogram(aes(y = ..density..), colour = "black", fill = "white") + labs(x = "Hygiene score on day 1", y = "Density")
hist.day1
